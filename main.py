"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü
"""
import sys
import os
from PyQt5.QtWidgets import QApplication, QMessageBox, QSplashScreen
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtGui import QPixmap, QFont, QColor

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from ui.login_window import LoginWindow
from ui.main_window import MainWindow
from config import (WINDOW_TITLE, COMPANY_NAME, WINDOW_MIN_WIDTH, WINDOW_MIN_HEIGHT)

class FaceRecognitionApp:
    def __init__(self):
        self.app = QApplication(sys.argv)
        self.app.setApplicationName(WINDOW_TITLE)
        self.app.setOrganizationName(COMPANY_NAME)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.app.setStyle('Fusion')
        
        # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
        self.app.setStyleSheet("""
            QWidget {
                font-family: 'Segoe UI', 'Arial', sans-serif;
            }
            QMessageBox {
                background-color: white;
                min-width: 300px;
            }
            QMessageBox QPushButton {
                min-width: 80px;
                min-height: 35px;
                padding: 8px 16px;
                border-radius: 6px;
                font-weight: bold;
            }
            QMessageBox QLabel {
                min-height: 50px;
                font-size: 14px;
            }
            QScrollBar:vertical {
                background-color: #f0f0f0;
                width: 12px;
                border-radius: 6px;
            }
            QScrollBar::handle:vertical {
                background-color: #c0c0c0;
                border-radius: 6px;
                min-height: 20px;
            }
            QScrollBar::handle:vertical:hover {
                background-color: #a0a0a0;
            }
            QScrollBar:horizontal {
                background-color: #f0f0f0;
                height: 12px;
                border-radius: 6px;
            }
            QScrollBar::handle:horizontal {
                background-color: #c0c0c0;
                border-radius: 6px;
                min-width: 20px;
            }
            QScrollBar::handle:horizontal:hover {
                background-color: #a0a0a0;
            }
        """)
        
        self.login_window = None
        self.main_window = None
        
        # –ü–æ–∫–∞–∑ splash screen
        self.show_splash_screen()
    
    def show_splash_screen(self):
        """–ü–æ–∫–∞–∑ –∑–∞—Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∑–∞—Å—Ç–∞–≤–∫–∏
        splash = QSplashScreen()
        splash.setFixedSize(400, 300)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ pixmap –¥–ª—è –∑–∞—Å—Ç–∞–≤–∫–∏
        pixmap = QPixmap(400, 300)
        pixmap.fill(Qt.white)
        
        from PyQt5.QtGui import QPainter, QLinearGradient, QBrush, QColor
        painter = QPainter(pixmap)
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
        gradient = QLinearGradient(0, 0, 400, 300)
        gradient.setColorAt(0, QColor.fromRgb(102, 126, 234))
        gradient.setColorAt(1, QColor.fromRgb(118, 75, 162))
        painter.fillRect(0, 0, 400, 300, QBrush(gradient))
        
        # –¢–µ–∫—Å—Ç
        painter.setPen(Qt.white)
        painter.setFont(QFont("Arial", 24, QFont.Bold))
        painter.drawText(20, 100, 360, 50, Qt.AlignCenter, COMPANY_NAME)
        
        painter.setFont(QFont("Arial", 16))
        painter.drawText(20, 150, 360, 30, Qt.AlignCenter, "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        painter.drawText(20, 180, 360, 30, Qt.AlignCenter, "—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü")
        
        painter.setFont(QFont("Arial", 12))
        painter.drawText(20, 250, 360, 30, Qt.AlignCenter, "–ó–∞–≥—Ä—É–∑–∫–∞...")
        
        painter.end()
        
        splash.setPixmap(pixmap)
        splash.show()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞—Å—Ç–∞–≤–∫–∏
        self.app.processEvents()
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∑–∞—Å—Ç–∞–≤–∫–∏
        QTimer.singleShot(2000, lambda: self.hide_splash_and_show_login(splash))
    
    def hide_splash_and_show_login(self, splash):
        """–°–∫—Ä—ã—Ç–∏–µ –∑–∞—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–∫–∞–∑ –æ–∫–Ω–∞ –≤—Ö–æ–¥–∞"""
        splash.close()
        self.show_login()
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        return self.app.exec_()
    
    def show_login(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ –≤—Ö–æ–¥–∞"""
        self.login_window = LoginWindow()
        self.login_window.login_successful.connect(self.on_login_success)
        self.login_window.show()
    
    def on_login_success(self, admin_data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞"""
        self.login_window.close()
        self.main_window = MainWindow(admin_data)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        from PyQt5.QtWidgets import QDesktopWidget
        desktop = QDesktopWidget()
        screen_rect = desktop.screenGeometry()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
        window_size = self.main_window.geometry()
        x = max(0, (screen_rect.width() - window_size.width()) // 2)
        y = max(0, (screen_rect.height() - window_size.height()) // 2)
        self.main_window.move(x, y)
        
        self.main_window.show()

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    missing_deps = []
    
    try:
        import cv2
    except ImportError:
        missing_deps.append("opencv-python")
    
    try:
        import face_recognition
    except ImportError:
        missing_deps.append("face-recognition")
    
    try:
        import numpy
    except ImportError:
        missing_deps.append("numpy")
    
    try:
        from PyQt5 import QtWidgets
    except ImportError:
        missing_deps.append("PyQt5")
    
    if missing_deps:
        app = QApplication(sys.argv)
        error_msg = (
            "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:\n\n" +
            "\n".join(f"‚Ä¢ {dep}" for dep in missing_deps) +
            "\n\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:\n" +
            f"pip install {' '.join(missing_deps)}"
        )
        QMessageBox.critical(None, "–û—à–∏–±–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", error_msg)
        sys.exit(1)

def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    from config import USER_PHOTOS_DIR, DATA_DIR, RESOURCES_DIR
    
    directories = [
        DATA_DIR,
        USER_PHOTOS_DIR,
        RESOURCES_DIR / 'icons'
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    check_dependencies()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    create_directories()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–º–µ—Ä—ã
    print("üì∑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–∞–º–µ—Ä—ã...")
    try:
        import cv2
        cap = cv2.VideoCapture(0)
        if not cap.isOpened():
            print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ö–∞–º–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –§—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")
        else:
            print("‚úÖ –ö–∞–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        cap.release()
    except Exception as e:
        print(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–º–µ—Ä—ã: {e}")
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    app = FaceRecognitionApp()
    
    try:
        exit_code = app.run()
        print("üëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        sys.exit(exit_code)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()