"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
from PyQt5.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
                           QLabel, QPushButton, QStackedWidget, QFrame,
                           QTableWidget, QTableWidgetItem, QHeaderView,
                           QMessageBox, QFileDialog, QGraphicsDropShadowEffect)
from PyQt5.QtCore import Qt, QTimer, QThread, pyqtSignal, QDateTime
from PyQt5.QtGui import QFont, QPixmap, QIcon, QColor

import cv2
import numpy as np
from datetime import datetime

from database import Database
from config import WINDOW_TITLE, PRIMARY_COLOR, SECONDARY_COLOR, COMPANY_NAME
from .add_employee_dialog import AddEmployeeDialog
from .face_attendance_widget import FaceAttendanceWidget

class MainWindow(QMainWindow):
    def __init__(self, user_data):
        super().__init__()
        self.user_data = user_data
        self.db = Database()
        self.init_ui()
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_time)
        self.timer.start(1000)
    
    def init_ui(self):
        self.setWindowTitle(WINDOW_TITLE)
        self.setGeometry(100, 100, 1200, 800)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # –ì–ª–∞–≤–Ω—ã–π layout
        main_layout = QHBoxLayout()
        central_widget.setLayout(main_layout)
        
        # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
        self.create_sidebar()
        main_layout.addWidget(self.sidebar)
        
        # –û–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.content_area = QStackedWidget()
        main_layout.addWidget(self.content_area, 1)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
        self.create_dashboard()
        self.create_employees_page()
        self.create_face_attendance_page()
        self.create_reports_page()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setStyleSheet("""
            QMainWindow {
                background-color: #f5f5f5;
            }
            QLabel {
                color: #333;
            }
        """)
    
    def create_sidebar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
        self.sidebar = QFrame()
        self.sidebar.setFixedWidth(250)
        self.sidebar.setStyleSheet(f"""
            QFrame {{
                background-color: {PRIMARY_COLOR};
                border: none;
            }}
        """)
        
        sidebar_layout = QVBoxLayout()
        self.sidebar.setLayout(sidebar_layout)
        
        # –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
        company_label = QLabel(COMPANY_NAME)
        company_label.setFont(QFont("Arial", 16, QFont.Bold))
        company_label.setStyleSheet("color: white; padding: 20px;")
        company_label.setAlignment(Qt.AlignCenter)
        sidebar_layout.addWidget(company_label)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = QFrame()
        user_info.setStyleSheet("""
            QFrame {
                background-color: rgba(255, 255, 255, 0.1);
                border-radius: 10px;
                margin: 10px;
                padding: 10px;
            }
        """)
        user_layout = QVBoxLayout()
        user_info.setLayout(user_layout)
        
        user_icon = QLabel("üë§")
        user_icon.setFont(QFont("Arial", 24))
        user_icon.setAlignment(Qt.AlignCenter)
        user_icon.setStyleSheet("color: white;")
        user_layout.addWidget(user_icon)
        
        username_label = QLabel(self.user_data['username'])
        username_label.setFont(QFont("Arial", 12, QFont.Bold))
        username_label.setStyleSheet("color: white;")
        username_label.setAlignment(Qt.AlignCenter)
        user_layout.addWidget(username_label)
        
        sidebar_layout.addWidget(user_info)
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = [
            ("üìä", "Dashboard", self.show_dashboard),
            ("üë•", "Employees", self.show_employees),
            ("üì∑", "Face Attendance", self.show_face_attendance),
            ("üìà", "Reports", self.show_reports)
        ]
        
        for icon, text, callback in nav_buttons:
            btn = QPushButton(f"{icon}  {text}")
            btn.setFont(QFont("Arial", 12))
            btn.setCursor(Qt.PointingHandCursor)
            btn.setStyleSheet("""
                QPushButton {
                    background-color: transparent;
                    color: white;
                    border: none;
                    padding: 15px;
                    text-align: left;
                    border-radius: 8px;
                    margin: 5px 10px;
                }
                QPushButton:hover {
                    background-color: rgba(255, 255, 255, 0.1);
                }
                QPushButton:pressed {
                    background-color: rgba(255, 255, 255, 0.2);
                }
            """)
            btn.clicked.connect(callback)
            sidebar_layout.addWidget(btn)
        
        sidebar_layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        logout_btn = QPushButton("üö™  Logout")
        logout_btn.setFont(QFont("Arial", 12))
        logout_btn.setCursor(Qt.PointingHandCursor)
        logout_btn.setStyleSheet("""
            QPushButton {
                background-color: rgba(255, 255, 255, 0.1);
                color: white;
                border: none;
                padding: 15px;
                margin: 10px;
                border-radius: 8px;
            }
            QPushButton:hover {
                background-color: rgba(255, 255, 255, 0.2);
            }
        """)
        logout_btn.clicked.connect(self.logout)
        sidebar_layout.addWidget(logout_btn)
    
    def create_dashboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Dashboard"""
        dashboard = QWidget()
        layout = QVBoxLayout()
        dashboard.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_layout = QHBoxLayout()
        title = QLabel("Dashboard")
        title.setFont(QFont("Arial", 24, QFont.Bold))
        header_layout.addWidget(title)
        
        # –í—Ä–µ–º—è
        self.time_label = QLabel()
        self.time_label.setFont(QFont("Arial", 14))
        self.time_label.setAlignment(Qt.AlignRight)
        header_layout.addWidget(self.time_label)
        
        layout.addLayout(header_layout)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_layout = QHBoxLayout()
        
        # –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = [
            ("Total Employees", self.db.get_all_employees().__len__(), "üë•", "#3498db"),
            ("Present Today", self.db.get_today_attendance_count(), "‚úÖ", "#2ecc71"),
            ("On Leave", 0, "üèñÔ∏è", "#e74c3c"),
            ("Late Arrivals", 0, "‚è∞", "#f39c12")
        ]
        
        for title, value, icon, color in stats:
            card = self.create_stat_card(title, str(value), icon, color)
            stats_layout.addWidget(card)
        
        layout.addLayout(stats_layout)
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–º–µ—Ç–∫–∏
        recent_label = QLabel("Recent Attendance")
        recent_label.setFont(QFont("Arial", 16, QFont.Bold))
        layout.addWidget(recent_label)
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–º–µ—Ç–æ–∫
        self.recent_table = QTableWidget()
        self.recent_table.setColumnCount(5)
        self.recent_table.setHorizontalHeaderLabels(["Employee ID", "Name", "Time", "Type", "Confidence"])
        self.recent_table.horizontalHeader().setStretchLastSection(True)
        self.recent_table.setAlternatingRowColors(True)
        self.recent_table.setStyleSheet("""
            QTableWidget {
                border: none;
                background-color: white;
                border-radius: 10px;
            }
            QTableWidget::item {
                padding: 10px;
            }
            QHeaderView::section {
                background-color: #f8f9fa;
                padding: 10px;
                border: none;
                font-weight: bold;
            }
        """)
        
        self.update_recent_attendance()
        layout.addWidget(self.recent_table)
        
        self.content_area.addWidget(dashboard)
    
    def create_stat_card(self, title, value, icon, color):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        card = QFrame()
        card.setStyleSheet(f"""
            QFrame {{
                background-color: white;
                border-radius: 10px;
                padding: 20px;
                border-left: 4px solid {color};
            }}
        """)
        
        # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(10)
        shadow.setColor(QColor(0, 0, 0, 40))
        shadow.setOffset(0, 3)
        card.setGraphicsEffect(shadow)
        
        layout = QVBoxLayout()
        card.setLayout(layout)
        
        # –ò–∫–æ–Ω–∫–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
        top_layout = QHBoxLayout()
        
        icon_label = QLabel(icon)
        icon_label.setFont(QFont("Arial", 32))
        icon_label.setStyleSheet(f"color: {color};")
        top_layout.addWidget(icon_label)
        
        value_label = QLabel(value)
        value_label.setFont(QFont("Arial", 28, QFont.Bold))
        value_label.setAlignment(Qt.AlignRight)
        top_layout.addWidget(value_label)
        
        layout.addLayout(top_layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel(title)
        title_label.setFont(QFont("Arial", 12))
        title_label.setStyleSheet("color: #666;")
        layout.addWidget(title_label)
        
        return card
    
    def create_employees_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
        employees_page = QWidget()
        layout = QVBoxLayout()
        employees_page.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        header_layout = QHBoxLayout()
        
        title = QLabel("Employees")
        title.setFont(QFont("Arial", 24, QFont.Bold))
        header_layout.addWidget(title)
        
        header_layout.addStretch()
        
        add_btn = QPushButton("‚ûï Add Employee")
        add_btn.setFont(QFont("Arial", 12))
        add_btn.setCursor(Qt.PointingHandCursor)
        add_btn.setStyleSheet(f"""
            QPushButton {{
                background-color: {SECONDARY_COLOR};
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 8px;
                font-weight: bold;
            }}
            QPushButton:hover {{
                background-color: #4cae4c;
            }}
        """)
        add_btn.clicked.connect(self.show_add_employee_dialog)
        header_layout.addWidget(add_btn)
        
        layout.addLayout(header_layout)
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        self.employees_table = QTableWidget()
        self.employees_table.setColumnCount(7)
        self.employees_table.setHorizontalHeaderLabels([
            "ID", "Employee ID", "Name", "Designation", "Department", "Email", "Actions"
        ])
        self.employees_table.horizontalHeader().setStretchLastSection(True)
        self.employees_table.setAlternatingRowColors(True)
        self.employees_table.setStyleSheet("""
            QTableWidget {
                border: none;
                background-color: white;
                border-radius: 10px;
            }
            QTableWidget::item {
                padding: 10px;
            }
            QHeaderView::section {
                background-color: #f8f9fa;
                padding: 10px;
                border: none;
                font-weight: bold;
            }
        """)
        
        self.update_employees_table()
        layout.addWidget(self.employees_table)
        
        self.content_area.addWidget(employees_page)
    
    def create_face_attendance_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü"""
        self.face_attendance_widget = FaceAttendanceWidget(self.db, self.user_data)
        self.content_area.addWidget(self.face_attendance_widget)
    
    def create_reports_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç—á–µ—Ç–æ–≤"""
        reports_page = QWidget()
        layout = QVBoxLayout()
        reports_page.setLayout(layout)
        
        title = QLabel("Attendance Reports")
        title.setFont(QFont("Arial", 24, QFont.Bold))
        layout.addWidget(title)
        
        # –§–∏–ª—å—Ç—Ä—ã
        filters_frame = QFrame()
        filters_frame.setStyleSheet("""
            QFrame {
                background-color: white;
                border-radius: 10px;
                padding: 20px;
            }
        """)
        filters_layout = QHBoxLayout()
        filters_frame.setLayout(filters_layout)
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–µ, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –∏ —Ç.–¥.
        
        layout.addWidget(filters_frame)
        
        # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤
        self.reports_table = QTableWidget()
        self.reports_table.setColumnCount(6)
        self.reports_table.setHorizontalHeaderLabels([
            "Date", "Employee ID", "Name", "Time In", "Time Out", "Total Hours"
        ])
        self.reports_table.horizontalHeader().setStretchLastSection(True)
        self.reports_table.setAlternatingRowColors(True)
        
        layout.addWidget(self.reports_table)
        
        self.content_area.addWidget(reports_page)
    
    def show_dashboard(self):
        self.content_area.setCurrentIndex(0)
        self.update_recent_attendance()
    
    def show_employees(self):
        self.content_area.setCurrentIndex(1)
        self.update_employees_table()
    
    def show_face_attendance(self):
        self.content_area.setCurrentIndex(2)
    
    def show_reports(self):
        self.content_area.setCurrentIndex(3)
    
    def show_add_employee_dialog(self):
        dialog = AddEmployeeDialog(self, self.db, self.user_data)
        if dialog.exec_():
            self.update_employees_table()
            QMessageBox.information(self, "Success", "Employee added successfully!")
    
    def update_time(self):
        current_time = QDateTime.currentDateTime()
        self.time_label.setText(current_time.toString("dddd, MMMM d, yyyy - hh:mm:ss"))
    
    def update_recent_attendance(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–º–µ—Ç–æ–∫"""
        records = self.db.get_attendance_report()[:10]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
        
        self.recent_table.setRowCount(len(records))
        for i, record in enumerate(records):
            self.recent_table.setItem(i, 0, QTableWidgetItem(record['employee_code']))
            self.recent_table.setItem(i, 1, QTableWidgetItem(record['full_name']))
            self.recent_table.setItem(i, 2, QTableWidgetItem(record['timestamp']))
            self.recent_table.setItem(i, 3, QTableWidgetItem(record['attendance_type']))
            confidence = f"{record['confidence']*100:.1f}%" if record['confidence'] else "N/A"
            self.recent_table.setItem(i, 4, QTableWidgetItem(confidence))
    
    def update_employees_table(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
        employees = self.db.get_all_employees()
        
        self.employees_table.setRowCount(len(employees))
        for i, emp in enumerate(employees):
            self.employees_table.setItem(i, 0, QTableWidgetItem(str(emp['id'])))
            self.employees_table.setItem(i, 1, QTableWidgetItem(emp['employee_id']))
            self.employees_table.setItem(i, 2, QTableWidgetItem(emp['full_name']))
            self.employees_table.setItem(i, 3, QTableWidgetItem(emp['designation']))
            self.employees_table.setItem(i, 4, QTableWidgetItem(emp['department']))
            self.employees_table.setItem(i, 5, QTableWidgetItem(emp['email']))
            
            # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
            delete_btn = QPushButton("üóëÔ∏è")
            delete_btn.setCursor(Qt.PointingHandCursor)
            delete_btn.clicked.connect(lambda _, emp_id=emp['id']: self.delete_employee(emp_id))
            self.employees_table.setCellWidget(i, 6, delete_btn)
    
    def delete_employee(self, employee_id):
        reply = QMessageBox.question(self, "Confirm Delete", 
                                   "Are you sure you want to delete this employee?",
                                   QMessageBox.Yes | QMessageBox.No)
        
        if reply == QMessageBox.Yes:
            self.db.delete_employee(employee_id)
            self.update_employees_table()
            QMessageBox.information(self, "Success", "Employee deleted successfully!")
    
    def logout(self):
        reply = QMessageBox.question(self, "Logout", 
                                   "Are you sure you want to logout?",
                                   QMessageBox.Yes | QMessageBox.No)
        
        if reply == QMessageBox.Yes:
            self.close()
            from .login_window import LoginWindow
            self.login_window = LoginWindow()
            self.login_window.show()
        